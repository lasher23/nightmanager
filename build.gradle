import org.gradle.internal.os.OperatingSystem;

buildscript {
    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:0.28.0"
    }
}

plugins {
    id 'java'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '3.0.0'
    id "com.github.node-gradle.node" version "3.5.0"
    id "com.github.ben-manes.versions" version "0.44.0"
    id 'org.graalvm.buildtools.native' version '0.9.18'
}

apply plugin: 'com.github.node-gradle.node'
apply plugin: "com.github.ben-manes.versions"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.postgresql:postgresql:42.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'
}

node {
    nodeModulesDir = new File("src/main/angular")
    download = true
}

processResources {
    dependsOn 'buildAngular'
    from("$projectDir/src/main/angular/dist/nightmanager") {
        into "static"
    }
}

task buildAngular(type: NpmTask) {
    onlyIf { !new File("src/main/angular/dist/nightmanager").exists() }
    dependsOn 'npmInstall'
    args = ['run', 'build']
}
